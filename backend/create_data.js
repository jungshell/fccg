const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcrypt');

async function createData() {
  const prisma = new PrismaClient();
  
  try {
    console.log('데이터 생성 시작...');
    
    // 1. 사용자 생성 (이미 있으면 스킵)
    const existingUser = await prisma.user.findFirst({
      where: { email: 'sti60val@gmail.com' }
    });
    
    let userId;
    if (!existingUser) {
      const hashedPassword = await bcrypt.hash('password123', 10);
      const user = await prisma.user.create({
        data: {
          name: '정성인',
          email: 'sti60val@gmail.com',
          password: hashedPassword,
          role: 'SUPER_ADMIN',
          status: 'ACTIVE'
        }
      });
      userId = user.id;
      console.log('✅ 사용자 생성 완료:', user.email);
    } else {
      userId = existingUser.id;
      console.log('✅ 기존 사용자 사용:', existingUser.email);
    }
    
    // 2. 현재 주 투표 세션 생성 (10월 13일-17일)
    const now = new Date();
    const currentWeekStart = new Date(now);
    // 월요일로 조정 (10월 13일)
    currentWeekStart.setDate(13);
    currentWeekStart.setMonth(9); // 10월 (0-based)
    currentWeekStart.setHours(0, 0, 0, 0);
    
    const currentWeekEnd = new Date(currentWeekStart);
    currentWeekEnd.setDate(currentWeekStart.getDate() + 4); // 금요일까지
    
    const activeSession = await prisma.voteSession.create({
      data: {
        weekStartDate: currentWeekStart,
        startTime: new Date(now.getTime() - 24 * 60 * 60 * 1000), // 어제부터
        endTime: new Date(now.getTime() + 2 * 24 * 60 * 60 * 1000), // 2일 후까지
        isActive: true,
        isCompleted: false
      }
    });
    
    console.log('✅ 현재 주 투표 세션 생성 완료:', activeSession.id);
    
    // 3. 지난 주 투표 세션 생성 (10월 6일-10일) - 완료됨
    const lastWeekStart = new Date(currentWeekStart);
    lastWeekStart.setDate(currentWeekStart.getDate() - 7);
    
    const lastWeekEnd = new Date(lastWeekStart);
    lastWeekEnd.setDate(lastWeekStart.getDate() + 4);
    
    const lastWeekSession = await prisma.voteSession.create({
      data: {
        weekStartDate: lastWeekStart,
        startTime: new Date(lastWeekStart.getTime() - 24 * 60 * 60 * 1000),
        endTime: new Date(lastWeekStart.getTime() + 4 * 24 * 60 * 60 * 1000),
        isActive: false,
        isCompleted: true
      }
    });
    
    console.log('✅ 지난 주 투표 세션 생성 완료:', lastWeekSession.id);
    
    // 4. 지난 주 투표 데이터 생성 (월, 수, 금 투표)
    const lastWeekVote = await prisma.vote.create({
      data: {
        userId: userId,
        voteSessionId: lastWeekSession.id,
        selectedDays: JSON.stringify(['MON', 'WED', 'FRI'])
      }
    });
    
    console.log('✅ 지난 주 투표 데이터 생성 완료:', lastWeekVote.id);
    
    // 5. 현재 주 투표 데이터 생성 (수, 금 투표)
    const currentWeekVote = await prisma.vote.create({
      data: {
        userId: userId,
        voteSessionId: activeSession.id,
        selectedDays: JSON.stringify(['WED', 'FRI'])
      }
    });
    
    console.log('✅ 현재 주 투표 데이터 생성 완료:', currentWeekVote.id);
    
    // 6. 지난 주 경기 데이터 생성 (10월 8일 경기)
    const gameDate = new Date(lastWeekStart);
    gameDate.setDate(lastWeekStart.getDate() + 2); // 수요일
    gameDate.setHours(12, 0, 0, 0);
    
    const game = await prisma.game.create({
      data: {
        date: gameDate,
        time: '19:00',
        location: '풋살장',
        gameType: 'FRIENDLY',
        eventType: '풋살',
        memberNames: JSON.stringify(['정성인']),
        selectedMembers: JSON.stringify(['정성인']),
        mercenaryCount: 0,
        autoGenerated: false,
        confirmed: true,
        createdById: userId
      }
    });
    
    console.log('✅ 지난 주 경기 데이터 생성 완료:', game.id);
    
    console.log('🎉 모든 데이터 생성 완료!');
    
  } catch (error) {
    console.error('❌ 데이터 생성 오류:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createData();
